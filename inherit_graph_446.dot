digraph "Graphical Class Hierarchy"
{
 // INTERACTIVE_SVG=YES
  bgcolor="transparent";
  edge [fontname="Helvetica",fontsize="10",labelfontname="Helvetica",labelfontsize="10"];
  node [fontname="Helvetica",fontsize="10",shape=record];
  rankdir="LR";
  Node1 [label="true_type",height=0.2,width=0.4,color="grey75"];
  Node1 -> Node2 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node2 [label="nlohmann::detail::conjunction\l\< is_complete_type\< CompatibleType\l \>, is_compatible_complete_type\l\< BasicJsonType, CompatibleType \> \>",height=0.2,width=0.4,color="black",URL="$dd/dde/structnlohmann_1_1detail_1_1conjunction.html"];
  Node2 -> Node3 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node3 [label="nlohmann::detail::is\l_compatible_type\< BasicJson\lType, CompatibleType \>",height=0.2,width=0.4,color="black",URL="$d3/d71/structnlohmann_1_1detail_1_1is__compatible__type.html"];
  Node1 -> Node4 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node4 [label="nlohmann::detail::conjunction\l\<... \>",height=0.2,width=0.4,color="black",URL="$dd/dde/structnlohmann_1_1detail_1_1conjunction.html"];
  Node1 -> Node5 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node5 [label="nlohmann::detail::is\l_basic_json\< NLOHMANN\l_BASIC_JSON_TPL \>",height=0.2,width=0.4,color="black",URL="$d8/d25/structnlohmann_1_1detail_1_1is__basic__json_3_01NLOHMANN__BASIC__JSON__TPL_01_4.html"];
  Node1 -> Node6 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node6 [label="nlohmann::detail::is\l_complete_type\< T, decltype\l(void(sizeof(T)))\>",height=0.2,width=0.4,color="black",URL="$dd/dcd/structnlohmann_1_1detail_1_1is__complete__type_3_01T_00_01decltype_07void_07sizeof_07T_08_08_08_4.html"];
  Node1 -> Node7 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node7 [label="o2::framework::conditional\l_t\< false, class_member\l_checker\< decltype(std::declval\l\< T \>().Class())\>, void \>",height=0.2,width=0.4,color="black",URL="$d0/dc8/structo2_1_1framework_1_1has__root__dictionary_3_01T_00_01std_1_1conditional__t_3_01false_00_01c92c2f35cf340d6478063dfc14cc927ba.html"];
  Node1 -> Node8 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node8 [label="o2::framework::is_forced\l_non_messageable\< T, typename\l std::enable_if\< std::is_same\l\< typename T::non_messageable,\l MarkAsNonMessageable \>::value\l \>::type \>",height=0.2,width=0.4,color="black",URL="$df/ddf/structo2_1_1framework_1_1is__forced__non__messageable_3_01T_00_01typename_01std_1_1enable__if_3_9497e1cc58c5001cfb1a9a57a11a8068.html"];
  Node1 -> Node9 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node9 [label="o2::framework::is_messageable\l\< o2::itsmft::Cluster \>",height=0.2,width=0.4,color="black",URL="$d2/dd2/structo2_1_1framework_1_1is__messageable_3_01o2_1_1itsmft_1_1Cluster_01_4.html"];
  Node1 -> Node10 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node10 [label="o2::framework::is_specialization\l\< Ref\< Args... \>, Ref \>",height=0.2,width=0.4,color="black",URL="$d4/d04/structo2_1_1framework_1_1is__specialization_3_01Ref_3_01Args_8_8_8_01_4_00_01Ref_01_4.html"];
  Node1 -> Node11 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node11 [label="o2::soa::is_index\<\l Ref\< Args... \>, Ref \>",height=0.2,width=0.4,color="black",URL="$db/d8e/structo2_1_1soa_1_1is__index_3_01Ref_3_01Args_8_8_8_01_4_00_01Ref_01_4.html"];
  Node1 -> Node12 [dir="back",color="midnightblue",fontsize="10",style="solid",fontname="Helvetica"];
  Node12 [label="std::is_trivially_copyable\l\< Point3D\< T \> \>",height=0.2,width=0.4,color="black",URL="$dc/d6e/structstd_1_1is__trivially__copyable_3_01Point3D_3_01T_01_4_01_4.html"];
}
